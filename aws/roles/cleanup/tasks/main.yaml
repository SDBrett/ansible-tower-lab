- name: get vpc info
  amazon.aws.ec2_vpc_net_info:
    region: "{{ region }}"
    filters:
      "tag:service": tower
  register: vpc_info

## EC2 cleanup
- name: get ec2 facts
  ec2_instance_info:
    filters:
     "tag:app": tower
    region: "{{ region }}"
  register: ec2_info

- name: terminate ec2 instances
  ec2_instance:
    instance_ids: "{{ item.instance_id }}"
    region: "{{ region }}"
    state: absent
    wait: yes
  with_items: "{{ ec2_info.instances }}"

## IGW cleanup

- name: remove igw
  community.aws.ec2_vpc_igw:
    vpc_id: "{{ item.vpc_id }}"
    state: "{{ state }}"
  with_items: "{{ vpc_info.vpcs }}"

## Subnet cleanup

- name: get subnet info
  amazon.aws.ec2_vpc_subnet_info:
    region: "{{ region }}"
    filters:
      "tag:service": tower
  register: subnet_info

- name: terminate subnets
  amazon.aws.ec2_vpc_subnet:
    region: "{{ region }}"
    vpc_id:  "{{ item.vpc_id }}"
    cidr: "{{ item.cidr_block }}"
    state: absent
    wait: yes
  with_items: "{{ subnet_info.subnets }}"

- name: Wait until subnets are removed
  amazon.aws.ec2_vpc_subnet_info:
    region: "{{ region }}"
    filters:
      "tag:service": tower
  register: subnets_remaining
  until: subnets_remaining.subnets | length < 1
  retries: 5
  delay: 10

  ## Group Cleanup

- name: get group info
  amazon.aws.ec2_group_info:
    region: "{{ region }}"
    filters:
      "tag:service": tower
  register: group_info

- name: remove groups
  amazon.aws.ec2_group:
    state: "{{ state }}"
    group_id: "{{ item.group_id }}"
    vpc_id: "{{ item.vpc_id }}"
    region: "{{ region }}" 
  with_items: "{{ group_info.security_groups }}"

- name: wait for groups to be removed
  amazon.aws.ec2_group_info:
    region: "{{ region }}"
    filters:
      "tag:service": tower
  register: groups_remaining
  until: groups_remaining.security_groups | length  < 1
  retries: 5
  delay: 10


## VPC Cleanup

- name: terminate vpc
  amazon.aws.ec2_vpc_net:
    region: "{{ region }}"
    name: tower
    cidr_block: "{{ item.cidr_block }}"
    state: absent
  with_items: "{{ vpc_info.vpcs }}"