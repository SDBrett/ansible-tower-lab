- name: create a VPC for tower
  amazon.aws.ec2_vpc_net:
    name: tower
    cidr_block: 10.10.0.0/16
    region: "{{ region }}"
    tags:
      service: tower
    state: "{{ state }}"
  register: vpc

- name: create igw
  community.aws.ec2_vpc_igw:
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    state: "{{ state }}"
    tags:
      Name: tower-igw
      service: tower
  register: igw

- name: Create subnet tower subnet
  amazon.aws.ec2_vpc_subnet:
    state: "{{ state }}"
    region: "{{ region }}"
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: "{{ item.vpc_subnet_cidr }}"
    az: "{{ item.vpc_subnet_az }}"
    map_public: yes
    tags:
      Name: "{{ item.vpc_subnet_name }}"
      service: tower
  register: tower_subnet
  with_items: "{{ vpc_subnets }}"

- name: Set up public subnet route table
  community.aws.ec2_vpc_route_table:
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    tags:
      Name: tower_rt
      service: tower
    subnets:
      - "{{ tower_subnet.results[0].subnet.id }}"
      - "{{ tower_subnet.results[1].subnet.id }}"
      - "{{ tower_subnet.results[2].subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
  register: public_route_table

- name: create group
  amazon.aws.ec2_group:
    name: tower
    state: "{{ state }}"
    description: "Ansible tower security group"
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ region }}"
    tags: {
      service: tower
    }
    rules:
      - proto: tcp
        ports:
        - 443
        cidr_ip: 0.0.0.0/0
        rule_desc: allow all on port 443
      - proto: tcp
        ports:
        - 22
        cidr_ip: 0.0.0.0/0
        rule_desc: allow all ssh
    rules_egress:
      - proto: all
        from_port: -1
        to_port: -1
        cidr_ip: 0.0.0.0/0
  register: sec_group
